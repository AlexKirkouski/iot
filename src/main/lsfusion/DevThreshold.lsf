MODULE DevThreshold;

REQUIRE Organization, Device, OrgDevice, Measurement, DevEvent, Utils;

minValue 'Мин'          = DATA DOUBLE   (Device, MeasurementType);
maxValue 'Макс'         = DATA DOUBLE   (Device, MeasurementType);


FORM devThreshold 'Пороговые значения' 
    OBJECTS o = Organization
    PROPERTIES(o) READONLY name  

    OBJECTS d = Device
    PROPERTIES(d) READONLY id

    OBJECTS m = MeasurementType
    PROPERTIES(m) READONLY name, id
    PROPERTIES(d,m) minValue, maxValue 

    ORDER id(d)
    FILTERS organization(d) = o
    FILTERS index(type(d),m)
;    
    
DESIGN devThreshold {
    OBJECTS {
        NEW split {
            type = SPLITV;
            NEW clients {
                type = SPLITH ;
                MOVE BOX(o) {
                    caption = 'Организации';
                    flex = 1;
                }
                fill = 1;
            }
            NEW tab {
                type = SPLITH ;
                MOVE BOX(d) {
                    caption = 'Устройства';
                    flex = 2;
                }
                MOVE BOX(m) {
                    caption = 'Пороговые значения измерений';
                    flex = 10;
                }
                fill = 2;
            }
            fill = 1;
        }
    }
}   

onPrint INTERNAL 'sclass.ConPrintAction' (STRING);

toString    = FORMULA TEXT 'trim(to_char($1,$2))';
subject ''  = DATA BPSTRING ();
body    ''  = DATA BPSTRING ();

WHEN CHANGED (id(Measurement m, MeasurementType mt)=id(Device d)) DO {
    IF minValue(d,mt) AND maxValue(d,mt) THEN {
        IF value(m,mt) < minValue(d,mt) OR value(m,mt) > maxValue(d,mt) THEN {
                subject()   <- '#' + toString(id(m,mt),'99999999') + ', значение вне диапазона';
                body()      <- name(mt) + ': ' + 
                            toString(minValue(d,mt) ,'999999.999') + ' [ ' +  
                            toString(value(m,mt)    ,'999999.999') + ' ] ' +
                            toString(maxValue(d,mt) ,'999999.999');
//                onPrint(subject() + ': ' + body());
                NEW e = DevEvent {
                    id(e)           <- id(m,mt);
                    subject(e)      <- 'Значение вне диапазона';
                    dt(e)           <- currentDateTime();
                    body(e)         <- body();
                    action(e)       <- 'email: ' + email(organization(d));
                    organization(e) <- organization(d);
                }
            EMAIL FROM emailAccount() SUBJECT subject() TO email(organization(d)) BODY body();
        };
    }
} 

