MODULE Server;

REQUIRE Device, Measurement;

CLASS Server 'Сервер';
deviceType = DATA DeviceType (Server);
nameDeviceType 'Тип устройства' (Server s) = name(deviceType(s));
name 'Наименование сервера' =  DATA STRING[100] (Server) CHARWIDTH 70;
port 'Порт' = DATA INTEGER (Server);
isRunning = DATA BOOLEAN (Server);

startUDPServer INTERNAL 'mite.StartUDPServerAction' (Server, INTEGER, TEXT);
stopUDPServer INTERNAL 'mite.StopUDPServerAction' (Server);

startServer 'Запустить сервер' (Server server) {    
    APPLY isRunning(server) <- TRUE;
    
    startUDPServer(server, port(server), 'importCSV');
}
stopServer 'Остановить сервер' (Server server) {
    stopUDPServer(server);

    APPLY isRunning(server) <- NULL;
}

server = GROUP AGGR Server server BY deviceType(server);
server(Device device) = server(type(device)); 
device(Server server, LONG id)= device(deviceType(server), id);

FORM servers 'Сервера' 
    OBJECTS s = Server
    PROPERTIES (s) name, nameDeviceType, port, NEW, DELETE
    PROPERTIES (s) TOOLBAR startServer SHOWIF NOT isRunning(s), stopServer SHOWIF isRunning(s)
    
    OBJECTS d = Device 
    PROPERTIES (d) id, NEW, DELETE
    FILTERS type(d) = deviceType(s)   

    OBJECTS mt = MeasurementType
    FILTERS number(deviceType(s),mt)
    
    OBJECTS m = Measurement
    PROPERTIES (m) dateTime, deviceId 
    ORDER dateTime(m) DESC
    FILTERS type(device(m)) = deviceType(s)  
    
    PROPERTIES READONLY =value(m, mt)  COLUMNS (mt) HEADER name(mt)
;

DESIGN servers {
    OBJECTS {
        NEW tab {
            type = SPLITH ;
            MOVE BOX(d) {
                caption = 'Устройства';
                flex = 1;
            }
            MOVE BOX(m) {
                caption = 'Измерения';
                flex = 3;
            }
            fill = 10;
        }
    }
}

NAVIGATOR {
    NEW servers;
}

// IMPORT
number(Server server, MeasurementType mt) = number(deviceType(server), mt);
fieldImport(n, Server server, MeasurementType mt) = 'field' + (n IF n=number(deviceType(server), mt));
importCSVScript 'Скрипт импорта' (Server server) = 'run(Server server, CSVFILE file) \{\n'+
                                                '\t'+  'IMPORT CSV NOHEADER FROM file FIELDS DATETIME dt, LONG id, ' + (GROUP CONCAT 'DOUBLE '+fieldImport(n, server, MeasurementType mt), ',' ORDER n) + ' DO \{\n' +
                                                '\t\t'+       'NEW m = Measurement \{\n' +
                                                '\t\t\t'+            'dateTime(m) <- dt;\n' +
                                                '\t\t\t'+            'device(m) <- device(server, id);\n' +
                                                '\t\t\t'+            'value(m, MeasurementType mt) <- CASE EXCLUSIVE '+ (GROUP CONCAT 'WHEN LONG(mt)=' + LONG(MeasurementType mt) + ' THEN ' + fieldImport(n, server, mt),' ' ORDER n) + ';\n' + 
                                                '\t\t'+       '\}\n' + 
                                                '\t'+  '\}\n' +
                                                '\t'+  'APPLY;\n' +
                                                '\}\n';

EXTEND FORM servers
    PROPERTIES (s) importCSVScript
;                                                 

importCSV(Server server, CSVFILE file) {
    EVAL importCSVScript(server) PARAMS server, file;
}

// TEST
importCSVTest(Server s) {
    INPUT f = CSVFILE DO {
        EXEC importCSV(s,f) ;
    }
}
EXTEND FORM servers 
    PROPERTIES importCSVTest(s) TOOLBAR;
