MODULE Device;

REQUIRE Time, Security; 

CLASS DeviceType 'Тип устройства' {
    unknown 'Неизвестное устройство'
}

TABLE deviceType(DeviceType);
id 'ID типа устройства' = DATA LONG (DeviceType);
name 'Название типа устройства' = DATA BPISTRING[1000] (DeviceType) CHARWIDTH 70 IN id;
fileDashboard 'Файл шаблона Dashboard' = DATA FILE (DeviceType) CHARWIDTH 7 IN id;

dateCreation 'Дата создания' = DATA DATE (DeviceType);
userCreation 'Создал' = DATA User (DeviceType);

WHEN SET (DeviceType d IS DeviceType) DO {
    dateCreation(d) <- currentDate();
    userCreation(d) <- currentUser();
} 


CLASS Device 'Устройство';
id 'ID устройства' = DATA LONG (Device) CHARWIDTH 8;
dbId 'ID DashBoard' = DATA INTEGER (Device) CHARWIDTH 7;
type 'Тип' = DATA DeviceType (Device);
nametype 'Тип' = name(type(Device d));

device = GROUP AGGR Device d BY id(d);
// Не удалять, используется в DropUDPServerCachesAction.java !!!
type (LONG l) = type(device(l));

select 'Отм.' = DATA LOCAL BOOLEAN (Device);
countSelect = GROUP SUM 1 IF select(Device d);

// логирование
dateCreation    'Дата создания'     = DATA DATETIME         (Device);
userCreation    'Кто создал'        = DATA BPSTRING[100]    (Device);


dropUDPServerCaches INTERNAL 'mite.DropUDPServerCachesAction' ();
WHEN GROUP SUM 1 IF CHANGED(type(Device dt)) DO
    dropUDPServerCaches();

FORM devices 'Устройства измерений'
    OBJECTS t = DeviceType
    PROPERTIES(t) name, fileDashboard, NEW, DELETE
    OBJECTS d = Device
    PROPERTIES (d) select, id, dateCreation, DELETE
    ORDER id(d)
    FILTERS type(d) = t
;

///// Создание устройств по диапазону ID
FORM dialogDiapasonID 'Создание устройств по диапазону ID'
    OBJECTS diapasonID = (withID = LONG, byID = LONG ) PANEL
    PROPERTIES withIDv = VALUE(withID), byIDv = VALUE(byID)
;

DESIGN dialogDiapasonID {
    NEW date BEFORE TOOLBARBOX {
        fill = 1;
        type = SPLITH;
        MOVE PROPERTY (withIDv) {
            fill = 1;
            caption = 'Диапазон ID c  ';
            font = 'bold 32';
            panelCaptionAbove = TRUE;
        }
        MOVE PROPERTY (byIDv) {
            fill = 1;
            caption = 'Диапазон ID по ';
            font = 'bold 32';
            panelCaptionAbove = TRUE;
        }        
    }
}

iterateLong(LONG i, LONG from, LONG to) = RECURSION i==from AND from IS LONG AND to IS LONG STEP i==$i+1 AND i<=to CYCLES IMPOSSIBLE;

insertDeviceDiapasonID 'Добавить устройства' (DeviceType t) {
    
    LOCAL limit = LONG ();
    LOCAL start = LONG ();
    
    DIALOG dialogDiapasonID  OBJECTS withID INPUT, byID INPUT  DO {
        
        IF withID > byID AND byID > 0 THEN
        {
            MESSAGE 'Неверно указан диапазон !' ;
            RETURN ;
        }
        
        IF byID = 0 THEN limit() <- withID;
            ELSE limit() <- byID;
        start() <- withID;
        
        FOR iterateLong(LONG j, start(), limit()) NEW d = Device DO {
            id(d) <- j;
            type(d) <- t;
            dateCreation(d) <- currentDateTime();
            userCreation(d) <- login(currentUser());
        }
        MESSAGE 'Добавлено новых устройств: ' + (limit() - start() + 1);
    }
}

EXTEND FORM devices
    PROPERTIES(t) insertDeviceDiapasonID ;

///// Изменение типа устройства для отмеченных устройств
FORM dialogDeviceType 'Выбор типа устройства'
    OBJECTS t = DeviceType
    PROPERTIES(t) READONLY name
    ORDER name(t)
;

changeDeviceType 'Изменить тип для отм. устройств' (DeviceType tt) {
    DIALOG dialogDeviceType OBJECTS t INPUT DO {
        ASK 'Для отмеченных устройств ('+ countSelect()+') изменяется тип. Изменять ?' yes = YESNO DO {
            IF yes THEN { 
                FOR select(Device d) DO {
                    type(d) <- t;
                    select(d) <- NULL ;
                }
            }
        }
    }
}

EXTEND FORM devices
    PROPERTIES(t) changeDeviceType AFTER insertDeviceDiapasonID(t);
