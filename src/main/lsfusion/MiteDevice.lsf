MODULE MiteDevice;

REQUIRE Device;

CLASS MiteDeviceType {
    instance 'Mite устройство'
} : DeviceType;
name(MiteDeviceType t) += staticCaption(t);

CLASS MiteDevice : Device;
type(MiteDevice md) += MiteDeviceType.instance;

TABLE measurement (Measurement);

CLASS MiteMeasurement : Measurement;
temp 'Температура' = DATA DOUBLE (MiteMeasurement);
humidity 'Влажность' = DATA DOUBLE (MiteMeasurement);
battery 'Батарея' = DATA DOUBLE (MiteMeasurement);
csq 'Мощность сигнала' = DATA DOUBLE (MiteMeasurement);

CLASS MiteServer {
    instance 'Mite сервер'
} : Server;

port 'Порт' = DATA INTEGER (MiteServer);
deviceType(MiteServer s) += MiteDeviceType.instance;

startUDPServer INTERNAL 'mite.StartUDPServerAction' (MiteServer, INTEGER, TEXT);
stopUDPServer INTERNAL 'mite.StopUDPServerAction' (MiteServer);

startServerInternal(MiteServer server) + {startUDPServer(server, port(server), 'importCSV');}
stopServerInternal(MiteServer server) + {stopUDPServer(server);}

importCSV(MiteServer server, CSVFILE file) {
    IMPORT CSV NOHEADER FROM file FIELDS DATETIME dt, DOUBLE temp, DOUBLE humidity, DOUBLE batt, LONG id, DOUBLE csq DO 
        NEW mm = MiteMeasurement {
            dateTime(mm) <- dt;
            temp(mm) <- temp; 
            humidity(mm) <- humidity; 
            battery(mm) <- batt;
            device(mm) <- device(server, id);
            csq(mm) <- csq;
        }        
    APPLY;
}

EXTEND FORM servers
    PROPERTIES (s) port
    PROPERTIES (d) NEW[MiteDevice] SHOWIF s IS MiteServer
    PROPERTIES (m) temp, humidity, battery, csq, ffff
;


