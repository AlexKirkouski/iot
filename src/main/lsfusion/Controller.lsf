MODULE Controller;

REQUIRE MqttServer, Organization, Options, Utils;

///// Типы контроллеров
CLASS ControllerType 'Тип контроллера' {
    unknown 'Неизвестное устройство'
}

TABLE controllerType(ControllerType);
id 'ID типа контроллера' = DATA LONG (ControllerType);
name 'Название типа контроллера' = DATA BPISTRING[1000] (ControllerType) CHARWIDTH 20 IN id;

// уникальное значение при создании (изменении)
controllerType = GROUP AGGR ControllerType c BY id(c);

dateCreation 'Дата создания' = DATA DATE (ControllerType);
userCreation 'Создал' = DATA User (ControllerType);

//organization 'Организация' = DATA Organization (Controller) ;


WHEN SET (ControllerType c IS ControllerType) DO {
    dateCreation(c) <- currentDate();
    userCreation(c) <- currentUser();
} 
/////

///// Команды по типам контроллера
CLASS Command 'Команды контроллеров';
TABLE command(Command);
id 'ID команды' = DATA LONG (Command);
name 'Название команды' = DATA BPISTRING[1000] (Command) CHARWIDTH 100 IN id;
signal 'Сигнал управления' = DATA BPISTRING[100] (Command) CHARWIDTH 30 IN id;

controllerType 'Тип' = DATA ControllerType (Command);
nametype 'Тип' = name(controllerType(Command c));

// уникальное значение при создании (изменении)
command = GROUP AGGR Command c BY id(c);

dateCreation 'Дата создания' = DATA DATE (Command);
userCreation 'Создал' = DATA User (Command);

WHEN SET (Command c IS Command) DO {
    dateCreation(c) <- currentDate();
    userCreation(c) <- currentUser();
}

on = DATA Command (ControllerType);
CONSTRAINT controllerType(on(ControllerType t)) != t CHECKED BY on MESSAGE 'Команда включения должна соответствовать типу контроллера';
off = DATA Command (ControllerType);
CONSTRAINT controllerType(off(ControllerType t)) != t CHECKED BY off MESSAGE 'Команда выключения должна соответствовать типу контроллера';
nameOn 'Команда вкл.' (ControllerType t) = name(on(t));
nameOff 'Команда выкл.' (ControllerType t) = name(off(t));

//FORM editCommand 'Редактирование команды'
//    OBJECTS c = Command PANEL
//    PROPERTIES(c) name, signal
//    EDIT Command OBJECT c
//;

FORM Commands 'Команда контроллера'
    OBJECTS c = Command
    PROPERTIES(c) READONLY name, signal
    LIST Command OBJECT c
;
/////

///// Контроллеры

CLASS Controller 'Контроллер';
TABLE controller(Controller);
// обязательные
server          'Сервер'            = DATA MqttServer       (Controller) NONULL ;
nameServer      'Сервер'            = name(server(Controller c)); 
id              'ID контроллера'    = DATA LONG             (Controller) NONULL;
topic           'Топик управления'  = DATA STRING[30]       (Controller) NONULL;

type            'Тип'               = DATA ControllerType   (Controller);
nametype 'Тип' = name(type(Controller c)) CHARWIDTH 70;

// уникальное значение при создании (изменении)
controller = GROUP AGGR Controller c BY id(c);
typeController (LONG l) = type(controller(l));

// дополнительно
note            'Примечание'        = DATA STRING[100]      (Controller);
base            'Основание'         = DATA STRING[100]      (Controller);    
subUnit         'Место установки'   = DATA SubUnit          (Controller);
signMes         'Признак измерений' = DATA BOOLEAN          (Controller); 
state           'Статус'            = DATA STRING[20]       (Controller); // пока зарезирвировано
// логирование
dateCreation    'Дата создания'     = DATA DATETIME         (Controller);
userCreation    'Кто создал'        = DATA BPSTRING[100]    (Controller);

on = on(type(Controller c));
off = off(type(Controller c));
nameOn 'Команда вкл.' (Controller t) = name(on(t));
nameOff 'Команда выкл.' (Controller t) = name(off(t));

select 'Отм.' = DATA LOCAL BOOLEAN (Controller);
countSelect = GROUP SUM 1 IF select(Controller d);

// при сохранении, форма редактирования
WHEN SET (Controller c IS Controller) DO {
    dateCreation(c) <- currentDateTime();
    userCreation(c) <- login(currentUser());
} 
/////

FORM controllerTypeCommands 'Типы контроллеров и их команды'
    OBJECTS t = ControllerType
    PROPERTIES(t) id, name, nameOn, nameOff, NEW, DELETE
    ORDER id(t)
    OBJECTS c = Command
    PROPERTIES (c) id, name, signal, NEW, DELETE
    ORDER id(c)
    FILTERS controllerType(c) = t
;

FORM controllers 'Контроллеры управления'
    OBJECTS t = ControllerType
    PROPERTIES(t) READONLY name
    OBJECTS c = Controller
    PROPERTIES (c) select, id, nameServer, topic, note, base, signMes, dateCreation, DELETE
    ORDER id(c)
    FILTERS type(c) = t
;

///// Создание контроллеров по диапазону ID
FORM dialogDiapasonID 'Создание контроллеров по диапазону ID'
    OBJECTS diapasonID = (withID = LONG, byID = LONG ) PANEL
    PROPERTIES withIDv = VALUE(withID), byIDv = VALUE(byID)
    
    OBJECTS prefix = STRING[30] PANEL
    PROPERTIES prefixv = VALUE(prefix)
    
    OBJECTS base = STRING[100] PANEL
    PROPERTIES basev = VALUE(base)
    
    OBJECTS ms = MqttServer PANEL
    PROPERTIES name(ms) SELECTOR
    
;

DESIGN dialogDiapasonID {
    NEW date BEFORE TOOLBARBOX {
        fill = 1;
        type = CONTAINERV;
        MOVE PROPERTY (withIDv) {
            fill = 1;
            caption = 'Диапазон ID c  ';
            font = 'bold 16';
        }
        MOVE PROPERTY (byIDv) {
            fill = 1;
            caption = 'Диапазон ID по ';
            font = 'bold 16';
        }
        MOVE PROPERTY (prefixv) {
            fill = 1;
            caption = 'Префикс для топика';
            font = 'bold 16';
        }
        MOVE PROPERTY (basev) {
            fill = 1;
            caption = 'Основание';
            font = 'bold 16';
        }
        MOVE PROPERTY (name(ms)) {
            fill = 1;
            caption = 'Сервер';
            font = 'bold 16';
        }
    }
}

iterateLong(LONG i, LONG from, LONG to) = RECURSION i==from AND from IS LONG AND to IS LONG STEP i==$i+1 AND i<=to CYCLES IMPOSSIBLE;

insertControllerDiapasonID 'Добавить контроллеры' (ControllerType t) {
    
    LOCAL limit = LONG ();
    LOCAL start = LONG ();
    
    DIALOG dialogDiapasonID  OBJECTS withID INPUT, byID INPUT, prefix INPUT, base INPUT , ms INPUT  DO {
        
        IF withID > byID AND byID > 0 THEN
        {
            MESSAGE 'Неверно указан диапазон !' ;
            RETURN ;
        }
        
        IF byID = 0 THEN limit() <- withID;
            ELSE limit() <- byID;
        start() <- withID;
        
        FOR iterateLong(LONG j, start(), limit()) NEW c = Controller DO {
            id(c) <- j;
            type(c) <- t;
            topic(c) <- prefix + j;
            base(c) <- base;
            server(c) <- ms;
            dateCreation(c) <- currentDateTime();
            userCreation(c) <- login(currentUser());
        }
        MESSAGE 'Добавлено новых контроллеров: ' + (limit() - start() + 1);
    }
}

EXTEND FORM controllers
    PROPERTIES(t) insertControllerDiapasonID ;

///// Изменение типа устройства для отмеченных контроллеров
FORM dialogControllerType 'Выбор типа контроллера'
    OBJECTS t = ControllerType
    PROPERTIES(t) READONLY name
    ORDER name(t)
;

changeControllerType 'Изменить тип для отм. контроллеров' (ControllerType tt) {
    DIALOG dialogControllerType OBJECTS t INPUT DO {
        ASK 'Для отмеченных контроллеров ('+ countSelect()+') изменяется тип. Изменять ?' yes = YESNO DO {
            IF yes THEN { 
                FOR select(Controller c) DO {
                    type(c) <- t;
                    select(c) <- NULL ;
                }
            }
        }
    }
}

EXTEND FORM controllers
    PROPERTIES(t) changeControllerType AFTER insertControllerDiapasonID(t);





////////////////////// Ниже -  удалить или что-то оставить ????????????????

FORM editController 'Редактирование контроллера'
    OBJECTS c = Controller PANEL
    PROPERTIES(c) id, topic
    PROPERTIES(c) note, signMes
    PROPERTIES(c) READONLY userCreation, dateCreation
    EDIT Controller OBJECT c
;

DESIGN editController {
    NEW cnt FIRST {
        fill = 1;
        NEW h1 {
            type = CONTAINERV;
            caption = 'Общие свойства';
            MOVE PROPERTY (id(c));
            MOVE PROPERTY (topic(c));
            MOVE PROPERTY (note(c));
            MOVE PROPERTY (signMes(c));
        }
        NEW h2 AFTER h1 {
            type = CONTAINERV;
            caption = 'Создано';
            MOVE PROPERTY(userCreation(c));
            MOVE PROPERTY(dateCreation(c));
        }
        MOVE TOOLBAR ; 
    }
}

//////////////////////////////////////