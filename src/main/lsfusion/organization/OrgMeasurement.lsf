MODULE OrgMeasurement;

REQUIRE OrgDevice, Measurement;

NAMESPACE Measurement;

measurementTypeString 'Типы измерений' (Device d) = GROUP CONCAT name(MeasurementType mt) IF number(type(d), mt), ',' ORDER number(type(d), mt) CHARWIDTH 20;

organization(Measurement m) = organization(device(m));

CLASS MeasurementLimit 'Порог измерения';
organization = DATA Organization (MeasurementLimit);
type = DATA MeasurementType (MeasurementLimit);
value 'Значение' = DATA DOUBLE (MeasurementLimit);
color 'Цвет в отчетах' = DATA COLOR (MeasurementLimit);
icon 'Иконка на карте' = DATA IMAGEFILE (MeasurementLimit);
limit(Organization org, MeasurementType type, DOUBLE value) = GROUP LAST MeasurementLimit limit ORDER value(limit), limit 
                                                                                    WHERE value(limit) < value BY organization(limit), type(limit);
colorLimit(Organization org, MeasurementType type, DOUBLE value) = color(limit(org, type, value));
iconLimit(Organization org, MeasurementType type, DOUBLE value) = icon(limit(org, type, value));

EXTEND FORM deviceTypes
    OBJECTS ol = Organization PANEL
    PROPERTIES (ol) name SELECTOR 
    OBJECTS mct = MeasurementType PANEL
    PROPERTIES (mct) name SELECTOR 

    OBJECTS ml = MeasurementLimit
    PROPERTIES (ml) value, color, icon, NEW, DELETE
    FILTERS organization(ml) = ol, type(ml) = mct
;

DESIGN deviceTypes {
    tab {
        NEW limit {
            type = CONTAINERV;
            caption = 'Лимиты';
            NEW panel {
                type = CONTAINERH;
                MOVE BOX (ol);
                MOVE BOX (mct);
            }
            MOVE BOX (ml) {
                fill = 1;
            }
            
            fill = 1;        
        }
    }
}

// MAP

iconLimit 'Иконка на карте' (Device d) = GROUP LAST IMAGEFILE i ORDER INTEGER n WHERE i = iconLimit(organization(d), MeasurementType type, lastValue(d, type)) AND n = number(type(d), type);
background (Device d, MeasurementType type) += colorLimit(organization(d), type, lastValue(d, type));
EXTEND FORM devices
    PROPERTIES (d) icon = iconLimit
;

// REPORTS

toDateTime(DATE date, INTEGER hour) = sumMinutes(ZDATETIME (date), hour * 60);
between(ZDATETIME dateTime, DATE date, INTEGER hour) = dateTime >= toDateTime(date, hour) AND dateTime < toDateTime(date, hour + 1);  
value(DATE date, INTEGER hour, Device d, MeasurementType mt) = 
                round((GROUP SUM value(Measurement m, mt) IF between(dateTime(m, mt), date, hour) AND device(m, mt) = d) /
                (GROUP SUM 1 IF between(dateTime(Measurement m), date, hour) AND device(m) = d), 2); 

show 'Показывать в отчете' = DATA BOOLEAN (DeviceType, MeasurementType);
show(DeviceType d, MeasurementType mt) => number(d, mt);
EXTEND FORM deviceTypes
    PROPERTIES (t, mt) show
;

FORM reportOrg
    OBJECTS dFrom = DATE, dTo = DATE, d = Device, o = Organization SUBREPORT
    
    OBJECTS (dt = DATE, h = INTEGER)
    FILTERS iterate(dt, dFrom, dTo) AND iterate(h, 0, 23)
    
    OBJECTS mt = MeasurementType
    FILTERS show(type(d), mt)

    PROPERTIES name 'Время' = DATETIME(toDateTime(dt, h))
    PROPERTIES cl = colorLimit(o, mt, value(dt, h, d, mt)) COLUMNS (mt)
    PROPERTIES value(dt, h, d, mt) COLUMNS (mt) HEADER name(mt)
;

exportReportXls(Organization o, DATE dFrom, DATE dTo) {
    FOR organization(Device d) = o DO { 
        PRINT reportOrg OBJECTS d = d, dFrom = dFrom, dTo = dTo, o = o XLSX SHEET 'Устройство ' + id(d) TO exportExcelFile;
        WRITE exportExcelFile() TO 'myfile' APPEND;
    }
    READ 'myfile.xlsx' TO exportExcelFile;
    delete('myfile.xlsx');
}

emailReportXls(Organization o, DATE dFrom, DATE dTo) {
    exportReportXls(o, dFrom, dTo);
    EMAIL TO email(o) ATTACH exportExcelFile();
}

printReportXls(Organization o, DATE dFrom, DATE dTo) {
    exportReportXls(o, dFrom, dTo);
    open(exportExcelFile());
}

FORM dialogDates
    OBJECTS dFrom 'Дата от' = DATE PANEL, dTo 'Дата до' = DATE PANEL
    PROPERTIES VALUE(dFrom), VALUE(dTo)
;

emailReportXls 'Отправить измерения' (Organization o) {
    DIALOG dialogDates OBJECTS dFrom INPUT, dTo INPUT DO
        emailReportXls(o, dFrom, dTo);
}

printReportXls 'Распечатать измерения' (Organization o) {
    DIALOG dialogDates OBJECTS dFrom INPUT, dTo INPUT DO
        printReportXls(o, dFrom, dTo);
}

EXTEND FORM organizations
    PROPERTIES (o) email, emailReportXls TOOLBAR, printReportXls TOOLBAR   
; 

// DEVICE MOVEMENT

intToColor = FORMULA '(256*256*($1)+256*($2)+($3))::integer';
rgb(INTEGER r, INTEGER g, INTEGER b) = COLOR(intToColor(r, g, b));

value 'Значение измерения' = DATA LONG (Location);
EXTEND FORM locations
    PROPERTIES (l) value
;

location = GROUP AGGR Location l BY organization(l), value(l) MATERIALIZED;
locationValue 'Знач. точки разм.' (Measurement m) = LONG(round0(value(m, locationType())));

location (Measurement m) += location(organization(m), locationValue(m));

FORM deviceMovement 'Перемещение датчиков'
    OBJECTS m = Measurement
    PROPERTIES dateTime(m), latitude = latitude (m), longitude = longitude(m), line 'Устройство' = id(device(m)), color 'Цвет' = rgb(mod(id(device(m)) * 371, 255), 255, 255), locationValue(m), groupEquals 'Гр' = TRUE DRAW m  
    ORDER dateTime(m)
;

// filters
//INDEX organization(Measurement m), dateTime(m);

EXTEND FORM deviceMovement
    OBJECTS o = Organization PANEL BEFORE m
    
    PROPERTIES (o) SHOWIF NOT organization(currentUser()) name SELECTOR
    FILTERS o = organization(currentUser()) OR NOT organization(currentUser()) 
    
    FILTERS organization(m) = o
;

DESIGN deviceMovement {
    OBJECTS {
        NEW paramBox BEFORE BOX(m) {
            type = CONTAINERH;
            MOVE BOX(o);
            fill = 0;
        }
    }
} 

hasCoords (Device d) = (number(type(d), latitudeType()) AND number(type(d), longitudeType())) OR number(type(d), locationType()) MATERIALIZED;
selected 'Выбр.' = DATA LOCAL BOOLEAN (Device) CHANGEKEY 'ADD' CHANGEMOUSE 'CTRL CLK';
FORM selectDevices 'Выбор датчиков'
    OBJECTS d = Device
    PROPERTIES (d) selected, id, nameLocation, nameType READONLY
    FILTERS hasCoords(d)
;
selectedDevices 'Датчики' = GROUP CONCAT ''+id(Device d) IF selected(d),',' ORDER d;
hasSelectedDevices = GROUP MAX selected(Device d) PREREAD;
dateFrom 'Время от' = DATA LOCAL ZDATETIME ();
dateTo 'Время до' = DATA LOCAL ZDATETIME ();

EXTEND FORM deviceMovement
    EVENTS ON INIT {
        dateFrom() <- currentZDateTime();
        dateTo() <- currentZDateTime();            
    }
    PROPERTIES selectedDevices() ON CHANGE { DIALOG selectDevices FILTERS organization(d) = o; }, dateFrom(), dateTo()
    FILTERS (NOT hasSelectedDevices() AND hasCoords(device(m))) OR selected(device(m)),
            NOT dateFrom() OR dateTime(m) >= dateFrom(),
            NOT dateTo() OR dateTime(m) <= dateTo()
;

DESIGN deviceMovement {
    paramBox {
        NEW filters {
            type = CONTAINERH;
            caption = 'Фильтры';
            MOVE PROPERTY (selectedDevices());                
            MOVE PROPERTY (dateFrom());                
            MOVE PROPERTY (dateTo());                
        } 
    }
}

NAVIGATOR {
    location {
        NEW deviceMovement;
    }
}