MODULE Grafana;

REQUIRE Options, Organization;

NAMESPACE Device;

///// ПЕРЕДАЧА В GRAFANA
// Параметры
cmd 'Команда' = DATA LOCAL INTEGER ();
eCode 'Код ошибки' = DATA LOCAL INTEGER (); // Если 0 - все хорошо, 1 - ошибка, 9 - критическая ошибка
eMessage 'Текст последней ошибки' = DATA LOCAL TEXT ();
grurl 'Адрес URL Grafana' = DATA LOCAL STRING[200] ();
aut 'Базовая аунтификация' = DATA LOCAL STRING[60] ();
txtDashBoard 'Текст дашборда' = DATA LOCAL TEXT ();

setParam 'Начальная установка параметров' () {
    eCode() <- 0;
    eMessage() <- '';
    txtDashBoard() <- '';
    grurl() <- grafanaUrl() + '/';
    aut() <- grafanaLogin() + ':' + grafanaPwd();
}

orgId           'ID организации'                    = DATA INTEGER      (Organization); // RO
dsId            'ID datasource'                     = DATA INTEGER      (Organization); // RO
dsUrl           'URL адрес'                         = DATA STRING[100]  (Organization) ;
dsName          'Имя DataSource'                    = DATA STRING[20]   (Organization); // RO 
dsNameDB        'Имя БД'                            = DATA STRING[50]   (Organization) ;
dsLogin         'Логин к БД'                        = DATA STRING[20]   (Organization) ;
dsPassword      'Пароль'                            = DATA STRING[20]   (Organization) ;
dsSSL           'SSL режим'                         = DATA STRING[15]   (Organization) ;
adminId         'ID админа'                         = DATA INTEGER      (Organization); // RO
admin           'Логин администратора'              = DATA STRING[20]   (Organization) ;
adminPassword   'Пароль администратора'             = DATA STRING[20]   (Organization) ;
userId          'ID пользователя'                   = DATA INTEGER      (Organization); // RO  
user            'Логин пользователя'                = DATA STRING[20]   (Organization) ;
userPassword    'Пароль пользователя'               = DATA STRING[20]   (Organization) ;
grName          'Название организации в Grafana'    = DATA STRING[60]   (Organization) ;

// запрет наличия пробелов в названии организации для Графаны
CONSTRAINT CHANGED(grName(Organization o)) AND strpos(grName(o), ' ') > 0
    MESSAGE 'В названии организации для Grafana должны отсутствовать пробелы !';
// запрет наличия двойных кавычек в названии организации для Графаны
CONSTRAINT CHANGED(grName(Organization o)) AND strpos(grName(o), '"') > 0
    MESSAGE 'В названии организации для Grafana должны отсутствовать кавычки !';

WHEN SET (Organization o IS Organization) DO {
    dsUrl(o) <- grafanaPsUrl();
    dsNameDB(o) <- grafanaPsDB();
    dsLogin(o) <- grafanaPsLogin();
    dsPassword(o) <- grafanaPsPwd();
    dsSSL(o) <- grafanaPsSSL();
}

///// Редактирование полей организации для Grafana
resetValues 'Сброс значений созданных параметров' (Organization o){
    ASK 'Перед сбросом значений не забудьте удалить организацию в Grafana ! \n\n' + 
        'Вы действительно хотите сбросить значения созданных параметров ?' yes = YESNO DO {
        IF yes THEN {
            orgId(o)   <- NULL ;
            dsId(o)    <- NULL ;
            dsName(o)  <- NULL ;
            adminId(o) <- NULL ;
            userId(o)  <- NULL ;
        }
    }
}

EXTEND FORM organization
    PROPERTIES(o) READONLY orgId,dsId,dsName,adminId,userId
    PROPERTIES(o) grName,dsUrl,dsNameDB,dsLogin,dsPassword,dsSSL,admin,adminPassword,user,userPassword
    PROPERTIES(o) resetValues
;

DESIGN organization {
    NEW cnt FIRST {
        fill = 1;
        MOVE PROPERTY (name(o));
        MOVE PROPERTY (grName(o));
        NEW cnt2 {
            fill = 1;
            NEW hp {
                horizontal = FALSE;
                caption = 'Пароли в Grafana'; 
                MOVE PROPERTY (admin(o));
                MOVE PROPERTY (adminPassword(o));
                MOVE PROPERTY (user(o));
                MOVE PROPERTY (userPassword(o));
            }
            NEW h2 AFTER hp {
                horizontal = FALSE;
                caption = 'Связь с PostgreSQL'; 
                MOVE PROPERTY (dsUrl(o));
                MOVE PROPERTY (dsNameDB(o));
                MOVE PROPERTY (dsLogin(o));
                MOVE PROPERTY (dsPassword(o));
                MOVE PROPERTY (dsSSL(o));
            }
            NEW h3 AFTER h2 {
                horizontal = FALSE;
                caption = 'Контроль созданных параметров';
                MOVE PROPERTY (orgId(o));
                MOVE PROPERTY (dsName(o));
                MOVE PROPERTY (dsId(o));
                MOVE PROPERTY (adminId(o));
                MOVE PROPERTY (userId(o));
                MOVE PROPERTY (resetValues(o));
            }
            MOVE TOOLBAR ;
        } 
    }
}

////// Передача информации по организации на почту

FORM printEMailOrg 
    PROPERTIES imageLogo(), grafanaUrl()
    OBJECTS o = Organization
    PROPERTIES(o) READONLY name, contact, admin, adminPassword, user, userPassword
;

sendEMailOrg 'Передача информации по организации на почту' (Organization o) {
    LOCAL file = FILE ();
    PRINT printEMailOrg OBJECTS o = o PDF TO file;
    
    LOCAL bodyFile = FILE ();
    PRINT printEMailOrg OBJECTS o = o HTML TO bodyFile;
    
//    PRINT printEMailOrg OBJECTS o = o;
//    open(file());
//    MESSAGE email(o);
    
    EMAIL 
        SUBJECT 'Регистрационные данные для доступа к услуге MITE'
        TO email(o) 
        BODY bodyFile()
        ATTACH file()
               NAME 'Регистрационные данные для доступа к услуге MITE' ;
}

crGrafana INTERNAL 'grafana.GrafanaAction' (Organization, INTEGER);

updateGrafana 'Обновить GRAFANA' (Organization o) {
    
    EXEC setParam();
    cmd() <- 1;
    // вызываем обработку типа INTERNAL
    crGrafana(o, 0) ;
    IF eCode() > 0 THEN MESSAGE eMessage() ;
    IF eCode() < 9 THEN {
        MESSAGE 'Обновление организации завершено.' NOWAIT ;
        EXEC sendEMailOrg(o) ;
    }
}

EXTEND FORM organizations
    PROPERTIES (o) updateGrafana TOOLBAR 
;

