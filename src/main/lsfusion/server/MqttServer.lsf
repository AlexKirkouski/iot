MODULE MqttServer;

REQUIRE SystemEvents;

CLASS MqttServer 'Сервер устройств MQTT';
use     'Акт'               = DATA BOOLEAN      (MqttServer);  // сервер используется, активный
isRun   'Ст'                = DATA BOOLEAN      (MqttServer);  // поле получит true, при успешном старте сервера
name    'Название сервера'  = DATA STRING[100]  (MqttServer) NONULL CHARWIDTH 50;
topic   'Название топика'   = DATA STRING[50]   (MqttServer) NONULL;
url     'Адрес сервера'     = DATA STRING[100]  (MqttServer) NONULL;
port    'TCP/IP порт'          = DATA INTEGER      (MqttServer) NONULL;

// Внешний модуль приема сообщений от MQTT сервера
startMqttServer INTERNAL 'mqtt.MqttServerAction' (MqttServer,INTEGER);

// Запуск сервера вручную
startServer 'Старт сервер' (MqttServer m) {
    IF (use(m)) THEN {
        IF (NOT isRun(m)) THEN startMqttServer(m,1); ELSE MESSAGE 'Сервер уже запущен';
    } ELSE MESSAGE 'Сервер не используется';
}

// Останов сервера
stopServer 'Стоп сервер' (MqttServer m) {
    IF (use(m)) THEN {
        IF (isRun(m)) THEN startMqttServer(m,0); ELSE MESSAGE 'Сервер не запущен';
    } ELSE MESSAGE 'Сервер не используется';
}



FORM mqttServers 'Сервера MQTT'
    OBJECTS m = MqttServer
    PROPERTIES(m) READONLY isRun 
    PROPERTIES(m) use, name, topic, url, port
    PROPERTIES(m) NEW, DELETE
    PROPERTIES(m) startServer, stopServer 
;

// Выбор сервера
FORM listMqttServers 'Сервера MQTT'
    OBJECTS m = MqttServer
    PROPERTIES(m) READONLY name, topic, url, port
    LIST MqttServer OBJECT m
;

// Автоматический старт обработчиков серверов MQTT, aplay выполняет обработчик
onStarted() + {
    FOR MqttServer m IS MqttServer DO {
        isRun(m) <- NULL;                       // для всех серверов (активных/неактивных) сбрасываем флаг запуска сервера
        IF use(m) THEN startMqttServer(m, 1);   // только активный сервер
    } 
} 